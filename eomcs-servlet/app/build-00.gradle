// Gradle 도구에 추가할 작업이 있으면 플러그인을 장착하라!
plugins {
    id 'java' 
    //id 'eclipse'
    id 'eclipse-wtp' // 이클립스 IDE 용 웹 프로젝트 관련 파일을 만들 때 사용할 도구가 들어 있는 플러그인 장착
    id 'war' // 웹 애플리케이션의 배포 파일을 만들 때 사용할 도구가 들어 있는 플러그인 장착
}

// 자바 소스를 컴파일 할 때 적용할 옵션을 설정한다.
tasks.withType(JavaCompile) {
    // 프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
    options.encoding = 'UTF-8' 

    // 소스 파일을 작성할 때 사용할 자바 버전
    sourceCompatibility = '11'

    // 자바 클래스를 실행시킬 JVM의 최소 버전
    targetCompatibility = '11'
}


// 웹 애플리케이션 배포 파일(.war)을 만들 때 사용할 기본 파일 이름을 설정한다.
// 이 이름은 웹 애플리케이션 context root 경로로도 사용된다.
war {
    archiveBaseName = "web"
}

// 이클립스 IDE 에서 사용할 값을 설정한다.
eclipse {

    // 이클립스 IDE로 임포트하는 프로젝트의 이름을 설정한다.
    project {
        name = "eomcs-servlet"
    }
    
    // 자바 개발 도구에서 사용할 값을 설정한다.
    jdt {
        //if you want to alter the java versions (by default they are configured with gradle java plugin settings):
        sourceCompatibility = 11
        targetCompatibility = 11
        javaRuntimeName = "JavaSE-11"
    }
    
    // 자바 웹 개발 도구에서 사용할 값을 설정한다.
    wtp {
        facet {
            //you can add some extra wtp facets or update existing ones; mandatory keys: 'name', 'version':
            facet name: 'jst.java', version: '11'
        }
        component {
            //you can configure the context path:
            //contextPath = '/web'

            //you can configure the deployName:
            //deployName = 'web'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
  // 의존라이브러리 옵션
  // => compileOnly 또는 providedCompile : 컴파일한 후 생성되는 빌드 파일에 포함되지 않는다.
  //    예) 컵
  // => implementation : 컴파일한 후 생성되는 빌드 파일에 포함된다.
  //    예) 텀블러
  // => testImplementation : 단위 테스트를 실행할 때만 사용하는 라이브러리이다.
  
  
  // Servlet-API
  // => 컴파일 할 때만 사용한다.
  // => 배치할 때는 포함하지 않는다.
  // => 왜? 서버에 이미 이 라이브러리가 있기 때문이다.
  // 
  providedCompile 'javax.servlet:javax.servlet-api:4.0.1'

  implementation 'com.google.guava:guava:28.1-jre'
  
  testImplementation 'junit:junit:4.12'
}

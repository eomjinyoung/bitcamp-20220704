plugins {
    id 'application'
    // id 'eclipse'  <-- eclipse-wtp 플러그인을 추가하면 eclipse 플러그인이 자동으로 추가된다.
    id 'eclipse-wtp'
    id 'war'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.7'
    implementation 'org.reflections:reflections:0.10.2'
    
    // 웹 애플리케이션에서 사용하는 자바 표준 웹 라이브러리
    // - 단 개발할 때만 사용한다. 
    // - 배포할 필요하는 없다. 왜? 톰캣 서버에 이미 존재한다.
    providedCompile 'javax.servlet:javax.servlet-api:4.0.1'
    
    // JSTL 명세를 구현한 라이브러리
    implementation 'javax.servlet:jstl:1.2'
    
    // multipart/form-data 형식의 데이터를 처리하는 라이브러리
    //implementation 'commons-fileupload:commons-fileupload:1.4'
    
    // Spring WebMVC 프레임워크
    implementation 'org.springframework:spring-webmvc:5.3.23'
    
    // Spring IoC 컨테이너 라이브러리
    // - spring-webmvc를 추가하면 자동으로 포함된다.
    // implementation 'org.springframework:spring-context:5.3.23'
    
    // Spring JDBC 관련 라이브러리 
    implementation 'org.springframework:spring-jdbc:5.3.23'
    
    //implementation project(':app-common')
}

application {
    mainClass = 'com.bitcamp.board.MiniWebServer'
}

// CLI 환경(명령창, 콘솔창)에서 자바 소스를 컴파일 할 때 적용할 옵션
tasks.withType(JavaCompile) {
    // 프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
    // $javac -encoding UTF-8 ..
    options.encoding = 'UTF-8' 

    // 소스 파일을 작성할 때 사용할 자바 버전
    sourceCompatibility = '11'

    // 자바 클래스를 실행시킬 JVM의 최소 버전
    targetCompatibility = '11'
}

// Eclipse IDE에서 사용할 프로젝트 정보 설정하기
eclipse {
    project {
        name = "board-app-server" 
        // 프로젝트 이름을 지정하지 않으면 build.gradle 파일이 있는 
        // 폴더 이름을 프로젝트 이름을 사용한다.
    }
    jdt {
      sourceCompatibility = 11
      targetCompatibility = 11
      javaRuntimeName = "JavaSE-11"
    }
    
    // 이클립스IDE 웹 개발 도구에서 사용할 값을 설정한다.
    wtp {
        facet {// 웹 애플리케이션의 환경 정보 설정
            // 웹 애플리케이션을 실행할 때 필요한 최소의 자바 버전 설정
            facet name: 'jst.java', version: '11' 
            
            // 웹 애플리케이션에서 사용할 서블릿 버전 설정
            facet name: 'jst.web', version: '4.0'
        }
        component {
            //you can configure the context path:
            //contextPath = '/app'

            //you can configure the deployName:
            //deployName = 'app'
        }
    }
}

// 웹 애플리케이션 배포 파일(.war)을 만들 때 사용할 기본 파일 이름을 설정한다.
// 이 이름은 웹 애플리케이션 context root 경로로도 사용된다.
war {
    archiveBaseName = "app"
}
